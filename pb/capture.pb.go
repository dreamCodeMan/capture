// Code generated by protoc-gen-go. DO NOT EDIT.
// source: capture.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	capture.proto

It has these top-level messages:
	VideoCaptureRequest
	OverlayImage
	VideoCaptureReply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VideoCaptureRequest struct {
	Path         string        `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Width        int32         `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height       int32         `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Time         int64         `protobuf:"varint,4,opt,name=time" json:"time,omitempty"`
	OverlayImage *OverlayImage `protobuf:"bytes,5,opt,name=overlayImage" json:"overlayImage,omitempty"`
}

func (m *VideoCaptureRequest) Reset()                    { *m = VideoCaptureRequest{} }
func (m *VideoCaptureRequest) String() string            { return proto.CompactTextString(m) }
func (*VideoCaptureRequest) ProtoMessage()               {}
func (*VideoCaptureRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VideoCaptureRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VideoCaptureRequest) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *VideoCaptureRequest) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VideoCaptureRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *VideoCaptureRequest) GetOverlayImage() *OverlayImage {
	if m != nil {
		return m.OverlayImage
	}
	return nil
}

type OverlayImage struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *OverlayImage) Reset()                    { *m = OverlayImage{} }
func (m *OverlayImage) String() string            { return proto.CompactTextString(m) }
func (*OverlayImage) ProtoMessage()               {}
func (*OverlayImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OverlayImage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type VideoCaptureReply struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *VideoCaptureReply) Reset()                    { *m = VideoCaptureReply{} }
func (m *VideoCaptureReply) String() string            { return proto.CompactTextString(m) }
func (*VideoCaptureReply) ProtoMessage()               {}
func (*VideoCaptureReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VideoCaptureReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*VideoCaptureRequest)(nil), "pb.VideoCaptureRequest")
	proto.RegisterType((*OverlayImage)(nil), "pb.OverlayImage")
	proto.RegisterType((*VideoCaptureReply)(nil), "pb.VideoCaptureReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VideoCapture service

type VideoCaptureClient interface {
	ExtractImage(ctx context.Context, in *VideoCaptureRequest, opts ...grpc.CallOption) (*VideoCaptureReply, error)
}

type videoCaptureClient struct {
	cc *grpc.ClientConn
}

func NewVideoCaptureClient(cc *grpc.ClientConn) VideoCaptureClient {
	return &videoCaptureClient{cc}
}

func (c *videoCaptureClient) ExtractImage(ctx context.Context, in *VideoCaptureRequest, opts ...grpc.CallOption) (*VideoCaptureReply, error) {
	out := new(VideoCaptureReply)
	err := grpc.Invoke(ctx, "/pb.VideoCapture/ExtractImage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VideoCapture service

type VideoCaptureServer interface {
	ExtractImage(context.Context, *VideoCaptureRequest) (*VideoCaptureReply, error)
}

func RegisterVideoCaptureServer(s *grpc.Server, srv VideoCaptureServer) {
	s.RegisterService(&_VideoCapture_serviceDesc, srv)
}

func _VideoCapture_ExtractImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoCaptureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoCaptureServer).ExtractImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.VideoCapture/ExtractImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoCaptureServer).ExtractImage(ctx, req.(*VideoCaptureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoCapture_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.VideoCapture",
	HandlerType: (*VideoCaptureServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExtractImage",
			Handler:    _VideoCapture_ExtractImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "capture.proto",
}

func init() { proto.RegisterFile("capture.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4e, 0x2c, 0x28,
	0x29, 0x2d, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x5a, 0xc8,
	0xc8, 0x25, 0x1c, 0x96, 0x99, 0x92, 0x9a, 0xef, 0x0c, 0x91, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x11, 0x12, 0xe2, 0x62, 0x29, 0x48, 0x2c, 0xc9, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x02, 0xb3, 0x85, 0x44, 0xb8, 0x58, 0xcb, 0x33, 0x53, 0x4a, 0x32, 0x24, 0x98, 0x14, 0x18, 0x35,
	0x58, 0x83, 0x20, 0x1c, 0x21, 0x31, 0x2e, 0xb6, 0x8c, 0xd4, 0xcc, 0xf4, 0x8c, 0x12, 0x09, 0x66,
	0xb0, 0x30, 0x94, 0x07, 0x32, 0xa1, 0x24, 0x33, 0x37, 0x55, 0x82, 0x45, 0x81, 0x51, 0x83, 0x39,
	0x08, 0xcc, 0x16, 0x32, 0xe1, 0xe2, 0xc9, 0x2f, 0x4b, 0x2d, 0xca, 0x49, 0xac, 0xf4, 0xcc, 0x4d,
	0x4c, 0x4f, 0x95, 0x60, 0x55, 0x60, 0xd4, 0xe0, 0x36, 0x12, 0xd0, 0x2b, 0x48, 0xd2, 0xf3, 0x47,
	0x12, 0x0f, 0x42, 0x51, 0xa5, 0xa4, 0xc4, 0xc5, 0x83, 0x2c, 0x8b, 0xcd, 0x6d, 0x4a, 0xea, 0x5c,
	0x82, 0xa8, 0xde, 0x28, 0xc8, 0xa9, 0x04, 0x29, 0x4c, 0x49, 0x2c, 0x49, 0x04, 0x2b, 0xe4, 0x09,
	0x02, 0xb3, 0x8d, 0x02, 0xb8, 0x78, 0x90, 0x15, 0x0a, 0x39, 0x70, 0xf1, 0xb8, 0x56, 0x94, 0x14,
	0x25, 0x26, 0x97, 0x40, 0x0c, 0x17, 0x07, 0x39, 0x06, 0x4b, 0x88, 0x48, 0x89, 0x62, 0x4a, 0x14,
	0xe4, 0x54, 0x2a, 0x31, 0x24, 0xb1, 0x81, 0x43, 0xd3, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x77,
	0x7e, 0x69, 0xd3, 0x5e, 0x01, 0x00, 0x00,
}
